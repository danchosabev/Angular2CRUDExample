{"version":3,"sources":["components/heroes/hero-search.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,uBAAkC,iBAAiB,CAAC,CAAA;AACpD,2BAAkC,iBAAiB,CAAC,CAAA;AACpD,wBAAkC,cAAc,CAAC,CAAA;AACjD,oCAAkC,uBAAuB,CAAC,CAAA;AAY1D;IAIC,6BAAoB,iBAAoC,EAAU,MAAc;QAA5D,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFxE,gBAAW,GAAG,IAAI,iBAAO,EAAU,CAAC;IAEwC,CAAC;IAErF,iDAAiD;IACjD,oCAAM,GAAN,UAAO,IAAY;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAcC;QAbA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW;aAC5B,YAAY,CAAC,GAAG,CAAC,CAAQ,iCAAiC;aAC1D,oBAAoB,EAAE,CAAG,iDAAiD;aAC1E,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAG,qCAAqC;cAE5D,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC;cAEnC,uBAAU,CAAC,EAAE,CAAS,EAAE,CAAC,EAJT,CAIS,CAAC;aAC5B,KAAK,CAAC,UAAA,KAAK;YACX,4BAA4B;YAC5B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAS,EAAE,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAU,GAAV,UAAW,IAAU;QACpB,IAAI,IAAI,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAtCF;QAAC,gBAAS,CAAC;YACV,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,4BAA4B;YACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;YACxC,SAAS,EAAE,CAAC,uCAAiB,CAAC;SAC9B,CAAC;;2BAAA;IAiCF,0BAAC;AAAD,CA/BA,AA+BC,IAAA;AA/BY,2BAAmB,sBA+B/B,CAAA","file":"components/heroes/hero-search.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router }            from '@angular/router';\r\nimport { Observable }        from 'rxjs/Observable';\r\nimport { Subject }           from 'rxjs/Subject';\r\nimport { HeroSearchService } from './hero-search.service';\r\n\r\nimport { Hero } from './hero';\r\n\r\n@Component({\r\n\tmoduleId: module.id,\r\n\tselector: 'hero-search',\r\n\ttemplateUrl: 'hero-search.component.html',\r\n\tstyleUrls: ['hero-search.component.css'],\r\n\tproviders: [HeroSearchService]\r\n})\r\n\r\nexport class HeroSearchComponent implements OnInit {\r\n\theroes: Observable<Hero[]>;\r\n\tprivate searchTerms = new Subject<string>();\r\n\r\n\tconstructor(private heroSearchService: HeroSearchService, private router: Router) { }\r\n\r\n\t// Push a search term into the observable stream.\r\n\tsearch(term: string): void {\r\n\t\tthis.searchTerms.next(term);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.heroes = this.searchTerms\r\n\t\t\t.debounceTime(300)        // wait for 300ms pause in events\r\n\t\t\t.distinctUntilChanged()   // ignore if next search term is same as previous\r\n\t\t\t.switchMap(term => term   // switch to new observable each time\r\n\t\t\t\t// return the http search observable\r\n\t\t\t\t? this.heroSearchService.search(term)\r\n\t\t\t\t// or the observable of empty heroes if no search term\r\n\t\t\t\t: Observable.of<Hero[]>([]))\r\n\t\t\t.catch(error => {\r\n\t\t\t\t// TODO: real error handling\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\treturn Observable.of<Hero[]>([]);\r\n\t\t\t});\r\n\t}\r\n\r\n\tgotoDetail(hero: Hero): void {\r\n\t\tlet link = ['/hero-detail', hero.id];\r\n\t\tthis.router.navigate(link);\r\n\t}\r\n}"],"sourceRoot":"/source/"}
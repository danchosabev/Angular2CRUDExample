{"version":3,"sources":["components/http-demo/shared/demo-hero.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+B,eAAe,CAAC,CAAA;AAC/C,qBAA+B,eAAe,CAAC,CAAA;AAE/C,2BAA+B,iBAAiB,CAAC,CAAA;AAGjD;IAIC,yBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFtB,cAAS,GAAG,YAAY,CAAC,CAAE,iBAAiB;IAElB,CAAC;IAEnC,mCAAS,GAAT;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;aAClC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3B,CAAC;IAEO,qCAAW,GAAnB,UAAoB,GAAa;QAChC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACtB,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;IACxB,CAAC;IAEO,qCAAW,GAAnB,UAAoB,KAAU;QAC7B,oEAAoE;QACpE,8DAA8D;QAC9D,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;YAC3C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;QACzE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,yBAAyB;QAChD,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAzBF;QAAC,iBAAU,EAAE;;uBAAA;IA0Bb,sBAAC;AAAD,CAzBA,AAyBC,IAAA;AAzBY,uBAAe,kBAyB3B,CAAA","file":"components/http-demo/shared/demo-hero.service.js","sourcesContent":["import { Injectable }     from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Hero }           from './hero';\r\nimport { Observable }     from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class DemoHeroService {\r\n\r\n\tprivate heroesUrl = 'app/heroes';  // URL to web API\r\n\r\n\tconstructor(private http: Http) { }\r\n\r\n\tgetHeroes(): Observable<Hero[]> {\r\n\t\treturn this.http.get(this.heroesUrl)\r\n\t\t\t.map(this.extractData)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tprivate extractData(res: Response) {\r\n\t\tlet body = res.json();\r\n\t\treturn body.data || {};\r\n\t}\r\n\r\n\tprivate handleError(error: any) {\r\n\t\t// In a real world app, we might use a remote logging infrastructure\r\n\t\t// We'd also dig deeper into the error to get a better message\r\n\t\tlet errMsg = (error.message) ? error.message :\r\n\t\t\terror.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n\t\tconsole.error(errMsg); // log to console instead\r\n\t\treturn Observable.throw(errMsg);\r\n\t}\r\n}"],"sourceRoot":"/source/"}